local hi = vim.api.nvim_set_hl
local M={}
function M.apply()
		hi(0,'Normal',{ fg = '#1b2b34',  bg = '#f5f7fa', })
	hi(0,'Bold',{bold = true, })
	hi(0,'Debug',{ fg = '#d0545b', })
	hi(0,'Directory',{ fg = '#5a87b4', })
	hi(0,'ErrorMsg',{ fg = '#d0545b',  bg = '#f5f7fa', })
	hi(0,'Exception',{ fg = '#d0545b', })
	hi(0,'FoldColumn',{ fg = '#5a87b4',  bg = '#f5f7fa', })
	hi(0,'Folded',{ fg = '#a7adba',  bg = '#d4d8dc', italic = true, })
	hi(0,'IncSearch',{ fg = '#d4d8dc',  bg = '#db804d', })
	hi(0,'Italic',{italic = true, })
	hi(0,'Macro',{ fg = '#d0545b', })
	hi(0,'MatchParen',{ fg = '#4f5b66',  bg = '#a7adba', })
	hi(0,'ModeMsg',{ fg = '#87af82', })
	hi(0,'MoreMsg',{ fg = '#87af82', })
	hi(0,'Question',{ fg = '#5a87b4', })
	hi(0,'Search',{ fg = '#a7adba',  bg = '#dcb057', })
	hi(0,'SpecialKey',{ fg = '#a7adba', })
	hi(0,'TooLong',{ fg = '#d0545b', })
	hi(0,'Underlined',{ fg = '#d0545b', })
	hi(0,'Visual',{ bg = '#b4babf', })
	hi(0,'VisualNOS',{ fg = '#d0545b', })
	hi(0,'WarningMsg',{ fg = '#d0545b', })
	hi(0,'WildMenu',{ fg = '#1b2b34',  bg = '#5a87b4', })
	hi(0,'Title',{ fg = '#5a87b4', })
	hi(0,'Cursor',{ fg = '#f5f7fa',  bg = '#4f5b66', })
	hi(0,'NonText',{ fg = '#a7adba', })
	hi(0,'EndOfBuffer',{ fg = '#4f5b66',  bg = '#f5f7fa', })
	hi(0,'LineNr',{ fg = '#a7adba',  bg = '#f5f7fa', })
	hi(0,'SignColumn',{ fg = '#f5f7fa',  bg = '#f5f7fa', })
	hi(0,'StatusLine',{ fg = '#d4d8dc',  bg = '#a7adba', })
	hi(0,'StatusLineNC',{ fg = '#a7adba',  bg = '#d4d8dc', })
	hi(0,'VertSplit',{ fg = '#d4d8dc',  bg = '#f5f7fa', })
	hi(0,'ColorColumn',{ bg = '#d4d8dc', })
	hi(0,'CursorColumn',{ bg = '#d4d8dc', })
	hi(0,'CursorLine',{ bg = '#1b2b34', })
	hi(0,'CursorLineNR',{ fg = '#f5f7fa',  bg = '#f5f7fa', })
	hi(0,'CursorLineNr',{ fg = '#a7adba',  bg = '#d4d8dc', })
	hi(0,'GitGutterAdd',{ fg = '#87af82',  bg = '#f5f7fa', bold = true, })
	hi(0,'GitGutterChange',{ fg = '#5a87b4',  bg = '#f5f7fa', bold = true, })
	hi(0,'GitGutterDelete',{ fg = '#d0545b',  bg = '#f5f7fa', bold = true, })
	hi(0,'GitGutterChangeDelete',{ fg = '#ad82ad',  bg = '#f5f7fa', bold = true, })
	hi(0,'SignifySignAdd',{ fg = '#87af82',  bg = '#f5f7fa', bold = true, })
	hi(0,'SignifySignChange',{ fg = '#5a87b4',  bg = '#f5f7fa', bold = true, })
	hi(0,'SignifySignDelete',{ fg = '#d0545b',  bg = '#f5f7fa', bold = true, })
	hi(0,'SignifySignChangeDelete',{ fg = '#ad82ad',  bg = '#f5f7fa', bold = true, })
	hi(0,'SignifySignDeleteFirstLine',{ fg = '#d0545b',  bg = '#f5f7fa', bold = true, })
	hi(0,'DiagnosticSignError',{ fg = '#d0545b', })
	hi(0,'DiagnosticUnderlineError',{undercurl = true, })
	hi(0,'DiagnosticFloatingError',{ fg = '#d0545b', })
	hi(0,'DiagnosticSignWarn',{ fg = '#dcb057', })
	hi(0,'DiagnosticUnderlineWarn',{undercurl = true, })
	hi(0,'DiagnosticFloatingWarn',{ fg = '#dcb057', })
	hi(0,'DiagnosticSignInformation',{ fg = '#5a87b4', })
	hi(0,'DiagnosticUnderlineInformation',{undercurl = true, })
	hi(0,'DiagnosticFloatingInformation',{ fg = '#5a87b4', })
	hi(0,'DiagnosticSignHint',{ fg = '#569e9d', })
	hi(0,'DiagnosticUnderlineHint',{undercurl = true, })
	hi(0,'DiagnosticFloatingHint',{ fg = '#569e9d', })
	hi(0,'LspReferenceText',{ bg = '#d4d8dc', })
	hi(0,'LspReferenceRead',{ bg = '#d4d8dc', })
	hi(0,'LspReferenceWrite',{ bg = '#d4d8dc', })
	hi(0,'FloatBorder',{ fg = '#65737e', })
	hi(0,'IndentBlanklineChar',{ fg = '#d4d8dc', nocombine = true, })
	hi(0,'IndentBlanklineSpaceChar',{ fg = '#d4d8dc', nocombine = true, })
	hi(0,'IndentBlanklineSpaceCharBlankline',{ fg = '#d4d8dc', nocombine = true, })
	hi(0,'@include',{ fg = '#ad82ad', })
	hi(0,'@punctuation.bracket',{ fg = '#569e9d', })
	hi(0,'@punctuation.delimiter',{ fg = '#569e9d', })
	hi(0,'@punctuation.special',{ fg = '#569e9d', })
	hi(0,'@parameter',{ fg = '#1b2b34', })
	hi(0,'@type',{ fg = '#dcb057', })
	hi(0,'@function',{ fg = '#569e9d', })
	hi(0,'@tag.delimiter',{ fg = '#569e9d', })
	hi(0,'@property',{ fg = '#1b2b34', })
	hi(0,'@method',{ fg = '#569e9d', })
	hi(0,'@parameter',{ fg = '#dcb057', })
	hi(0,'@constructor',{ fg = '#1b2b34', })
	hi(0,'@variable',{ fg = '#343d46', })
	hi(0,'@operator',{ fg = '#db804d', })
	hi(0,'@tag',{ fg = '#1b2b34', })
	hi(0,'@keyword',{ fg = '#ad82ad', })
	hi(0,'@keyword.operator',{ fg = '#ad82ad', })
	hi(0,'@variable.builtin',{ fg = '#d0545b', })
	hi(0,'@label',{ fg = '#569e9d', })
	hi(0,'@conditional',{ fg = '#ad82ad', })
	hi(0,'@namespace',{ fg = '#1b2b34', })
	hi(0,'@symbol',{ fg = '#966a5b', })
	hi(0,'@exception',{ fg = '#d0545b', })
end
return  M
	